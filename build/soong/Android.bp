// krypton soong configs

bootstrap_go_package {
    name: "soong-krypton-generator",
    pkgPath: "krypton/soong/generator",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
        "soong-shared",
    ],
    srcs: [
        "generator/generator.go",
    ],
    pluginFor: ["soong_build"],
}

soong_config_module_type {
    name: "vendor_init",
    module_type: "cc_defaults",
    config_namespace: "kryptonGlobalVars",
    value_variables: ["target_init_vendor_lib"],
    properties: ["whole_static_libs"],
}

vendor_init {
    name: "vendor_init_defaults",
    soong_config_variables: {
        target_init_vendor_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_fod_lib",
    module_type: "cc_defaults",
    config_namespace: "kryptonGlobalVars",
    value_variables: ["target_surfaceflinger_fod_lib"],
    properties: [
        "cppflags",
        "whole_static_libs",
    ],
}

surfaceflinger_fod_lib {
    name: "surfaceflinger_fod_lib_defaults",
    soong_config_variables: {
        target_surfaceflinger_fod_lib: {
            cppflags: ["-DTARGET_PROVIDES_FOD_LIB"],
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "librmnetctl_pre_uplink",
    module_type: "cc_defaults",
    config_namespace: "kryptonQcomVars",
    bool_variables: ["uses_pre_uplink_features_netmgrd"],
    properties: ["cflags"],
}

librmnetctl_pre_uplink {
    name: "librmnetctl_pre_uplink_defaults",
    soong_config_variables: {
        uses_pre_uplink_features_netmgrd: {
            cflags: ["-DNO_UPLINK_FEATURES"],
        },
    },
}

soong_config_module_type {
    name: "target_shim_libs",
    module_type: "cc_defaults",
    config_namespace: "kryptonGlobalVars",
    value_variables: ["target_ld_shim_libs"],
    properties: ["cppflags"],
}

target_shim_libs {
    name: "shim_libs_defaults",
    soong_config_variables: {
        target_ld_shim_libs: {
            cppflags: ["-DLD_SHIM_LIBS=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "vold_hw_fde",
    module_type: "cc_defaults",
    config_namespace: "kryptonQcomVars",
    bool_variables: ["supports_hw_fde"],
    properties: [
        "cflags",
        "header_libs",
        "shared_libs",
    ],
}

vold_hw_fde {
    name: "vold_hw_fde_defaults",
    soong_config_variables: {
        supports_hw_fde: {
            cflags: ["-DCONFIG_HW_DISK_ENCRYPTION"],
            header_libs: ["libcryptfs_hw_headers"],
            shared_libs: ["libcryptfs_hw"],
        },
    },
}

soong_config_module_type {
    name: "vold_hw_fde_perf",
    module_type: "cc_defaults",
    config_namespace: "kryptonQcomVars",
    bool_variables: ["supports_hw_fde_perf"],
    properties: [
        "cflags",
        "shared_libs",
    ],
}

vold_hw_fde_perf {
    name: "vold_hw_fde_perf_defaults",
    soong_config_variables: {
        supports_hw_fde_perf: {
            cflags: ["-DCONFIG_HW_DISK_ENCRYPT_PERF"],
            shared_libs: ["libcryptfs_hw"],
        },
    },
}

soong_config_module_type {
    name: "qti_camera_device",
    module_type: "cc_defaults",
    config_namespace: "kryptonQcomVars",
    bool_variables: ["uses_qti_camera_device"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

qti_camera_device {
    name: "qti_camera_device_defaults",
    soong_config_variables: {
        uses_qti_camera_device: {
            cppflags: ["-DQTI_CAMERA_DEVICE"],
            shared_libs: ["vendor.qti.hardware.camera.device@1.0"],
        },
    },
}

soong_config_module_type {
    name: "no_cameraserver",
    module_type: "cc_defaults",
    config_namespace: "kryptonGlobalVars",
    bool_variables: ["has_legacy_camera_hal1"],
    properties: [
        "cppflags",
    ],
}

no_cameraserver {
    name: "no_cameraserver_defaults",
    soong_config_variables: {
        has_legacy_camera_hal1: {
            cppflags: [
                "-DNO_CAMERA_SERVER",
                "-Wno-overloaded-virtual",
            ],
        },
    },
}

soong_config_module_type {
    name: "camera_in_mediaserver",
    module_type: "cc_defaults",
    config_namespace: "kryptonGlobalVars",
    bool_variables: ["has_legacy_camera_hal1"],
    properties: [
        "overrides",
        "shared_libs",
    ],
}

camera_in_mediaserver {
    name: "camera_in_mediaserver_defaults",
    defaults: ["no_cameraserver_defaults"],
    soong_config_variables: {
        has_legacy_camera_hal1: {
            overrides: ["cameraserver"],
            shared_libs: [
                "android.hardware.camera.common@1.0",
                "android.hardware.camera.device@3.4",
                "android.hardware.camera.provider@2.6",
                "libcameraservice",
                "libgui",
            ],
        },
    },
}

soong_config_module_type {
    name: "camera_needs_client_info",
    module_type: "cc_defaults",
    config_namespace: "kryptonGlobalVars",
    bool_variables: ["camera_needs_client_info"],
    properties: ["cppflags"],
}

camera_needs_client_info {
    name: "camera_needs_client_info_defaults",
    soong_config_variables: {
        camera_needs_client_info: {
            cppflags: ["-DCAMERA_NEEDS_CLIENT_INFO"],
        },
    },
}
